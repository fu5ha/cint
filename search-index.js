var searchIndex = JSON.parse('{\
"bytemuck":{"doc":"This crate gives small utilities for casting between plain …","t":[13,8,2,8,16,18,18,8,13,8,4,8,13,13,8,8,8,11,11,5,5,5,5,5,5,5,0,11,11,11,11,11,5,5,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,11,5,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,4,13,13,11,11,5,5,5,5,5,11,11,11,11,11,11,5,5,11,11,10,11,5,5,5,5,5,5,11,5,5,11,5,11,12],"n":["AlignmentMismatch","AnyBitPattern","CheckedBitPattern","Contiguous","Int","MAX_VALUE","MIN_VALUE","NoUninit","OutputSliceWouldHaveSlop","Pod","PodCastError","PodInOption","SizeMismatch","TargetAlignmentGreaterAndInputNotAligned","TransparentWrapper","Zeroable","ZeroableInOption","borrow","borrow_mut","bytes_of","bytes_of_mut","cast","cast_mut","cast_ref","cast_slice","cast_slice_mut","checked","clone","eq","fmt","fmt","from","from_bytes","from_bytes_mut","from_integer","from_integer","hash","into","into_integer","into_integer","offset_of","offset_of","peel","peel","peel_mut","peel_mut","peel_ref","peel_ref","peel_slice","peel_slice","peel_slice_mut","peel_slice_mut","pod_align_to","pod_align_to_mut","pod_read_unaligned","try_cast","try_cast_mut","try_cast_ref","try_cast_slice","try_cast_slice_mut","try_from","try_from_bytes","try_from_bytes_mut","try_into","try_pod_read_unaligned","type_id","wrap","wrap","wrap_mut","wrap_mut","wrap_ref","wrap_ref","wrap_slice","wrap_slice","wrap_slice_mut","wrap_slice_mut","zeroed","zeroed","Bits","CheckedBitPattern","CheckedCastError","InvalidBitPattern","PodCastError","borrow","borrow_mut","cast","cast_mut","cast_ref","cast_slice","cast_slice_mut","clone","eq","fmt","fmt","from","from","from_bytes","from_bytes_mut","hash","into","is_valid_bit_pattern","ne","pod_read_unaligned","try_cast","try_cast_mut","try_cast_ref","try_cast_slice","try_cast_slice_mut","try_from","try_from_bytes","try_from_bytes_mut","try_into","try_pod_read_unaligned","type_id","0"],"q":["bytemuck","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytemuck::checked","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytemuck::checked::CheckedCastError"],"d":["For this type of cast the alignments must be exactly the …","Marker trait for “plain old data” types that are valid …","","A trait indicating that:","The primitive integer type with an identical …","The upper <em>inclusive</em> bound for valid instances of this type.","The lower <em>inclusive</em> bound for valid instances of this type.","Marker trait for “plain old data” types with no uninit …","If the element size changes then the output slice changes …","Marker trait for “plain old data”.","The things that can go wrong when casting between <code>Pod</code> data …","Trait for types which are Pod when wrapped in Option.","When casting a slice you can’t convert between ZST …","You tried to cast a slice to an element type with a higher …","A trait which indicates that a type is a …","Trait for types that can be safely created with <code>zeroed</code>.","Trait for types which are Zeroable when wrapped in Option.","","","Re-interprets <code>&amp;T</code> as <code>&amp;[u8]</code>.","Re-interprets <code>&amp;mut T</code> as <code>&amp;mut [u8]</code>.","Cast <code>T</code> into <code>U</code>","Cast <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Cast <code>&amp;T</code> into <code>&amp;U</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","Cast <code>&amp;mut [T]</code> into <code>&amp;mut [U]</code>.","Checked versions of the casting functions exposed in crate …","","","","","Returns the argument unchanged.","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","If <code>value</code> is within the range for valid instances of this …","If <code>value</code> is within the range for valid instances of this …","","Calls <code>U::from(self)</code>.","Perform the conversion from <code>C</code> into the underlying integral …","Perform the conversion from <code>C</code> into the underlying integral …","Find the offset in bytes of the given <code>$field</code> of <code>$Type</code>. …","Find the offset in bytes of the given <code>$field</code> of <code>$Type</code>. …","Convert the wrapper type into the inner type.","Convert the wrapper type into the inner type.","Convert a mutable reference to the wrapper type into a …","Convert a mutable reference to the wrapper type into a …","Convert a reference to the wrapper type into a reference …","Convert a reference to the wrapper type into a reference …","Convert a slice to the wrapped type into a slice to the …","Convert a slice to the wrapped type into a slice to the …","Convert a mutable slice to the wrapped type into a mutable …","Convert a mutable slice to the wrapped type into a mutable …","As <code>align_to</code>, but safe because of the <code>Pod</code> bound.","As <code>align_to_mut</code>, but safe because of the <code>Pod</code> bound.","Reads the slice into a <code>T</code> value.","Try to cast <code>T</code> into <code>U</code>.","Try to convert a <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Try to convert a <code>&amp;T</code> into <code>&amp;U</code>.","Try to convert <code>&amp;[A]</code> into <code>&amp;[B]</code> (possibly with a change in …","Try to convert <code>&amp;mut [A]</code> into <code>&amp;mut [B]</code> (possibly with a …","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Reads from the bytes as if they were a <code>T</code>.","","Convert the inner type into the wrapper type.","Convert the inner type into the wrapper type.","Convert a mutable reference to the inner type into a …","Convert a mutable reference to the inner type into a …","Convert a reference to the inner type into a reference to …","Convert a reference to the inner type into a reference to …","Convert a slice to the inner type into a slice to the …","Convert a slice to the inner type into a slice to the …","Convert a mutable slice to the inner type into a mutable …","Convert a mutable slice to the inner type into a mutable …","Calls <code>zeroed</code>.","Calls <code>zeroed</code>.","<code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> …","A marker trait that allows types that have some invalid …","The things that can go wrong when casting between …","When casting to a <code>CheckedBitPattern</code> type, it is possible …","An error occurred during a true-[<code>Pod</code>] cast","","","Cast <code>T</code> into <code>U</code>","Cast <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Cast <code>&amp;T</code> into <code>&amp;U</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","Cast <code>&amp;mut [T]</code> into <code>&amp;mut [U]</code>.","","","","","Returns the argument unchanged.","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Calls <code>U::from(self)</code>.","If this function returns true, then it must be valid to …","","Reads the slice into a <code>T</code> value.","Try to cast <code>T</code> into <code>U</code>.","Try to convert a <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Try to convert a <code>&amp;T</code> into <code>&amp;U</code>.","Try to convert <code>&amp;[A]</code> into <code>&amp;[B]</code> (possibly with a change in …","Try to convert <code>&amp;mut [A]</code> into <code>&amp;mut [B]</code> (possibly with a …","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Reads from the bytes as if they were a <code>T</code>.","",""],"i":[1,0,0,0,2,2,2,0,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,2,2,1,1,2,2,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,1,0,0,1,0,1,3,3,3,3,3,3,3,3,3,3,4,4,5,0,0,6,6,6,6,0,0,0,0,0,6,6,6,6,6,6,0,0,6,6,5,6,0,0,0,0,0,0,6,0,0,6,0,6,7],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["nouninit",8]],["anybitpattern",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],null,[[["",0]],["podcasterror",4]],[[["",0],["podcasterror",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[],["",0]],[[],["",0]],[[],["option",4]],[[],["option",4]],[[["",0],["",0]]],[[]],[[]],[[]],null,null,[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["anybitpattern",8]],[[["nouninit",8]],["result",4,[["anybitpattern",8],["podcasterror",4]]]],[[["",0]],["result",4,[["podcasterror",4]]]],[[["",0]],["result",4,[["podcasterror",4]]]],[[],["result",4,[["podcasterror",4]]]],[[],["result",4,[["podcasterror",4]]]],[[],["result",4]],[[],["result",4,[["podcasterror",4]]]],[[],["result",4,[["podcasterror",4]]]],[[],["result",4]],[[],["result",4,[["anybitpattern",8],["podcasterror",4]]]],[[["",0]],["typeid",3]],[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["nouninit",8]],["checkedbitpattern",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[["",0]],["checkedcasterror",4]],[[["",0],["checkedcasterror",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[["podcasterror",4]],["checkedcasterror",4]],[[],["",0]],[[],["",0]],[[["",0],["",0]]],[[]],[[],["bool",0]],[[["",0],["checkedcasterror",4]],["bool",0]],[[],["anybitpattern",8]],[[["nouninit",8]],["result",4,[["checkedbitpattern",8],["checkedcasterror",4]]]],[[["",0]],["result",4,[["checkedcasterror",4]]]],[[["",0]],["result",4,[["checkedcasterror",4]]]],[[],["result",4,[["checkedcasterror",4]]]],[[],["result",4,[["checkedcasterror",4]]]],[[],["result",4]],[[],["result",4,[["checkedcasterror",4]]]],[[],["result",4,[["checkedcasterror",4]]]],[[],["result",4]],[[],["result",4,[["checkedbitpattern",8],["checkedcasterror",4]]]],[[["",0]],["typeid",3]],null],"p":[[4,"PodCastError"],[8,"Contiguous"],[8,"TransparentWrapper"],[8,"Zeroable"],[8,"CheckedBitPattern"],[4,"CheckedCastError"],[13,"PodCastError"]]},\
"cint":{"doc":"<code>cint</code> - <code>c</code>olor <code>int</code>erop","tn":["Aces2065","Aces2065","AcesCc","AcesCc","AcesCct","AcesCct","AcesCg","AcesCg","Alpha","Bt2020","Bt2020","Bt2100","Bt2100","CieLCh","CieLCh","CieLab","CieLab","CieXYZ","CieXYZ","CintTy","ColorInterop","ColorType","ComponentTy","DciP3","DciP3","DciXYZPrime","DciXYZPrime","DisplayP3","DisplayP3","EncodedBt2020","EncodedBt2020","EncodedBt2100HLG","EncodedBt2100HLG","EncodedBt2100PQ","EncodedBt2100PQ","EncodedDisplayP3","EncodedDisplayP3","EncodedRec709","EncodedRec709","EncodedSrgb","EncodedSrgb","GenericColor1","GenericColor1","GenericColor3","GenericColor3","Hsl","Hsl","Hsv","Hsv","ICtCpHLG","ICtCpHLG","ICtCpPQ","ICtCpPQ","LinearSrgb","LinearSrgb","Luma","Luma","Luminance","Luminance","NUM_COMPONENTS","Oklab","Oklab","Oklch","Oklch","PremultipliedAlpha","Rec709","Rec709","SPACE","Spaces","YCbCr","YCbCr","YCxCz","YCxCz","YPbPr","YPbPr","YPrimeCbCr","YPrimeCbCr","YPrimePbPr","YPrimePbPr","Yuv","Yuv","a","a","alpha","alpha","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","b","b","b","b","b","b","b","b","b","b","b","b","b","b","b","b","b","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","c","cb","cb","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color","color","cp","cp","cr","cr","ct","ct","cx","cz","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_cint","g","g","g","g","g","g","g","g","g","g","g","g","g","g","g","g","h","h","h","h","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","i","i","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_cint","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","l","l","l","l","l","l","l","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","num_components","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pb","pb","pr","pr","r","r","r","r","r","r","r","r","r","r","r","r","r","r","r","r","s","s","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","v","v","x","x","x","x","y","y","y","y","y","y","y","y","y","z","z","z"],"q":["cintd":["A color in the ACES 2065-1 color space.","A color in the ACES 2065-1 color space.","A color in the ACEScc color space.","A color in the ACEScc color space.","A color in the ACEScct color space.","A color in the ACEScct color space.","A color in the ACEScg color space.","A color in the ACEScg color space.","A color with an alpha component.","A color in the BT.2020 color space.","A color in the BT.2020 color space.","A color in the BT.2100 color space.","A color in the BT.2100 color space.","A color in the CIE L*C*h° color space.","A color in the CIE L*C*h° color space.","A color in the CIE L*a*b* color space.","A color in the CIE L*a*b* color space.","A color in the CIE XYZ color space.","A color in the CIE XYZ color space.","","A trait that should be implemented by provider crates on …","A trait used to simpify the interface of the <code>Alpha</code> and …","","A color in the DCI-P3 (aka P3 DCI and P3 D60) color space.","A color in the DCI-P3 (aka P3 DCI and P3 D60) color space.","A color in the X’Y’Z’ color space, a DCI …","A color in the X’Y’Z’ color space, a DCI …","A color in the Display P3 (aka P3 D65) color space.","A color in the Display P3 (aka P3 D65) color space.","A color in the encoded BT.2020 color space.","A color in the encoded BT.2020 color space.","A color in the encoded BT.2100 color space with HLG …","A color in the encoded BT.2100 color space with HLG …","A color in the encoded BT.2100 color space with PQ …","A color in the encoded BT.2100 color space with PQ …","A color in the Display P3 (aka P3 D65) color space.","A color in the Display P3 (aka P3 D65) color space.","A color in the encoded Rec.709/BT.709 color space.","A color in the encoded Rec.709/BT.709 color space.","A color in the encoded sRGB color space.","A color in the encoded sRGB color space.","A color in a generic color space that can be represented …","A color in a generic color space that can be represented …","A color in a generic color space that can be represented …","A color in a generic color space that can be represented …","A color in the HSL color space.","A color in the HSL color space.","A color in the HSV color space.","A color in the HSV color space.","A color in the ICtCp color space with HLG (Hybrid …","A color in the ICtCp color space with HLG (Hybrid …","A color in the ICtCp color space with PQ (Perceptual …","A color in the ICtCp color space with PQ (Perceptual …","A color in the linear (decoded) sRGB color space.","A color in the linear (decoded) sRGB color space.","A single-channel CIE luma (non-linear transform from …","A single-channel CIE luma (non-linear transform from …","A single-channel CIE luminance.","A single-channel CIE luminance.","","A color in the Oklab color space.","A color in the Oklab color space.","A color in the Oklch color space (a transformation from …","A color in the Oklch color space (a transformation from …","A premultiplied color with an alpha component.","A color in the Rec.709/BT.709 color space.","A color in the Rec.709/BT.709 color space.","","An enum with a variant for each of the color spaces …","A color in the YCbCr color space. See discussion of the …","A color in the YCbCr color space. See discussion of the …","A color in the YCxCz (also called YyCxCz) color space, …","A color in the YCxCz (also called YyCxCz) color space, …","A color in the YPbPr color space. See discussion of the …","A color in the YPbPr color space. See discussion of the …","A color in the Y’CbCr color space. See discussion of the …","A color in the Y’CbCr color space. See discussion of the …","A color in the Y’PbPr color space. See discussion of the …","A color in the Y’PbPr color space. See discussion of the …","A color in the YUV color space. See discussion of the …","A color in the YUV color space. See discussion of the …","The a component, representing green-red chroma difference.","The a component, representing green-red chroma difference.","The alpha component.","The alpha componenthe blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The b component, representing blue-yellow chroma …","The b component, representing blue-yellow chroma …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The C (chroma) component. Varies from 0 to a hue dependent …","The C (chroma) component. Varies from 0 to a hue dependent …","The Cb (chroma-blue/yellow) component.","The Cb (chroma-blue/yellow) component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The contained color, which is completely separate from the …","The contained color, which has been premultiplied with …","The Cp (chroma-protan) component.","The Cp (chroma-protan) component.","The Cr (chroma-red/green) component.","The Cr (chroma-red/green) component.","The Ct (chroma-tritan) component.","The Ct (chroma-tritan) component.","The Cx (chroma difference blue/yellow) component","The Cz (chroma difference red/green) component","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Convert <code>self</code> into its canonical <code>cint</code> type.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The h (hue) component. Varies from -PI to PI.","The h (hue) component. Varies from -PI to PI.","The H (hue) component. Varies from 0 to 1.","The H (hue) component. Varies from 0 to 1.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The I (intensity) component.","The I (intensity) component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a <code>Self</code> from its canonical <code>cint</code> type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","CIE luminance.","CIE luminance.","The L (lightness) component. Varies from 0 to 100.","The L (lightness) component. Varies from 0 to 100.","The L (lightness) component. Varies from 0 to 1","The L (lightness) component. Varies from 0 to 1.","The L (lightness) component. Varies from 0 to 1.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Pb (chroma-blue/yellow) component.","The Pb (chroma-blue/yellow) component.","The Pr (chroma-red/green) component.","The Pr (chroma-red/green) component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The S (saturation) component. Varies from 0 to 1.","The S (saturation) component. Varies from 0 to 1.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The U (chroma-blue/yellow) component.","The V (value) component. Varies from 0 to 1.","The V (chroma-red/green) component.","The first component.","The first component.","The X’ component.","The X component.","The second component.","The Y’ component.","The Y component.","The Y (luminance) component.","The Y’ (luma) component.","The Y (luminance) component.","The Y’ (luma) component.","The Y (luminance) component.","The Yy (luminance) component.","The third component.","The Z’ component.","The Z component."],"i":[0,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,1,2,0,0,3,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,3,0,1,0,1,0,0,1,3,0,0,1,0,1,0,1,0,1,0,1,0,1,4,5,6,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,4,32,5,33,34,35,36,37,38,39,40,41,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,4,32,5,33,34,35,36,37,38,39,40,41,8,9,10,11,16,17,18,19,20,21,22,24,25,26,27,28,4,5,6,7,1,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,4,32,5,33,34,35,36,37,38,39,40,41,6,7,1,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,4,32,5,33,34,35,36,37,38,39,40,41,32,33,36,37,6,7,1,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,4,32,5,33,34,35,36,37,38,39,40,41,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,4,32,5,33,34,35,36,37,38,39,40,41,6,7,29,30,36,37,29,30,41,41,6,7,1,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,4,32,5,33,34,35,36,37,38,39,40,41,6,7,1,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,4,32,5,33,34,35,36,37,38,39,40,41,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,4,4,4,4,32,32,32,32,5,5,5,5,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,2,8,9,10,11,16,17,18,19,20,21,22,24,25,26,27,28,32,33,34,35,6,7,1,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,4,32,5,33,34,35,36,37,38,39,40,41,29,30,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,4,4,32,32,5,5,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,2,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,4,32,5,33,34,35,36,37,38,39,40,41,14,15,4,32,5,33,34,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,4,32,5,33,34,35,36,37,38,39,40,41,1,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,4,32,5,33,34,35,36,37,38,39,40,41,38,39,38,39,8,9,10,11,16,17,18,19,20,21,22,24,25,26,27,28,34,35,6,7,1,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,4,32,5,33,34,35,36,37,38,39,40,41,6,7,1,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,4,32,5,33,34,35,36,37,38,39,40,41,6,7,1,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,4,32,5,33,34,35,36,37,38,39,40,41,40,35,40,12,13,23,31,12,23,31,36,37,38,39,40,41,12,23,31],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,[[["",0]],["alpha",3]],[[["",0]],["premultipliedalpha",3]],[[["",0]],["spaces",4]],[[["",0]],["encodedsrgb",3]],[[["",0]],["linearsrgb",3]],[[["",0]],["encodedrec709",3]],[[["",0]],["rec709",3]],[[["",0]],["genericcolor3",3]],[[["",0]],["genericcolor1",3]],[[["",0]],["luminance",3]],[[["",0]],["luma",3]],[[["",0]],["acescg",3]],[[["",0]],["aces2065",3]],[[["",0]],["acescc",3]],[[["",0]],["acescct",3]],[[["",0]],["displayp3",3]],[[["",0]],["encodeddisplayp3",3]],[[["",0]],["dcip3",3]],[[["",0]],["dcixyzprime",3]],[[["",0]],["bt2020",3]],[[["",0]],["encodedbt2020",3]],[[["",0]],["bt2100",3]],[[["",0]],["encodedbt2100pq",3]],[[["",0]],["encodedbt2100hlg",3]],[[["",0]],["ictcppq",3]],[[["",0]],["ictcphlg",3]],[[["",0]],["ciexyz",3]],[[["",0]],["cielab",3]],[[["",0]],["cielch",3]],[[["",0]],["oklab",3]],[[["",0]],["oklch",3]],[[["",0]],["hsl",3]],[[["",0]],["hsv",3]],[[["",0]],["ycbcr",3]],[[["",0]],["yprimecbcr",3]],[[["",0]],["ypbpr",3]],[[["",0]],["yprimepbpr",3]],[[["",0]],["yuv",3]],[[["",0]],["ycxcz",3]],[[["",0],["encodedsrgb",3]],["ordering",4]],[[["",0],["linearsrgb",3]],["ordering",4]],[[["",0],["encodedrec709",3]],["ordering",4]],[[["",0],["rec709",3]],["ordering",4]],[[["",0],["genericcolor3",3]],["ordering",4]],[[["",0],["genericcolor1",3]],["ordering",4]],[[["",0],["luminance",3]],["ordering",4]],[[["",0],["luma",3]],["ordering",4]],[[["",0],["acescg",3]],["ordering",4]],[[["",0],["aces2065",3]],["ordering",4]],[[["",0],["acescc",3]],["ordering",4]],[[["",0],["acescct",3]],["ordering",4]],[[["",0],["displayp3",3]],["ordering",4]],[[["",0],["encodeddisplayp3",3]],["ordering",4]],[[["",0],["dcip3",3]],["ordering",4]],[[["",0],["dcixyzprime",3]],["ordering",4]],[[["",0],["bt2020",3]],["ordering",4]],[[["",0],["encodedbt2020",3]],["ordering",4]],[[["",0],["bt2100",3]],["ordering",4]],[[["",0],["encodedbt2100pq",3]],["ordering",4]],[[["",0],["encodedbt2100hlg",3]],["ordering",4]],[[["",0],["ictcppq",3]],["ordering",4]],[[["",0],["ictcphlg",3]],["ordering",4]],[[["",0],["ciexyz",3]],["ordering",4]],[[["",0],["cielab",3]],["ordering",4]],[[["",0],["cielch",3]],["ordering",4]],[[["",0],["oklab",3]],["ordering",4]],[[["",0],["oklch",3]],["ordering",4]],[[["",0],["hsl",3]],["ordering",4]],[[["",0],["hsv",3]],["ordering",4]],[[["",0],["ycbcr",3]],["ordering",4]],[[["",0],["yprimecbcr",3]],["ordering",4]],[[["",0],["ypbpr",3]],["ordering",4]],[[["",0],["yprimepbpr",3]],["ordering",4]],[[["",0],["yuv",3]],["ordering",4]],[[["",0],["ycxcz",3]],["ordering",4]],null,null,null,null,null,null,null,null,null,null,[[["",0],["alpha",3]],["bool",0]],[[["",0],["premultipliedalpha",3]],["bool",0]],[[["",0],["spaces",4]],["bool",0]],[[["",0],["encodedsrgb",3]],["bool",0]],[[["",0],["linearsrgb",3]],["bool",0]],[[["",0],["encodedrec709",3]],["bool",0]],[[["",0],["rec709",3]],["bool",0]],[[["",0],["genericcolor3",3]],["bool",0]],[[["",0],["genericcolor1",3]],["bool",0]],[[["",0],["luminance",3]],["bool",0]],[[["",0],["luma",3]],["bool",0]],[[["",0],["acescg",3]],["bool",0]],[[["",0],["aces2065",3]],["bool",0]],[[["",0],["acescc",3]],["bool",0]],[[["",0],["acescct",3]],["bool",0]],[[["",0],["displayp3",3]],["bool",0]],[[["",0],["encodeddisplayp3",3]],["bool",0]],[[["",0],["dcip3",3]],["bool",0]],[[["",0],["dcixyzprime",3]],["bool",0]],[[["",0],["bt2020",3]],["bool",0]],[[["",0],["encodedbt2020",3]],["bool",0]],[[["",0],["bt2100",3]],["bool",0]],[[["",0],["encodedbt2100pq",3]],["bool",0]],[[["",0],["encodedbt2100hlg",3]],["bool",0]],[[["",0],["ictcppq",3]],["bool",0]],[[["",0],["ictcphlg",3]],["bool",0]],[[["",0],["ciexyz",3]],["bool",0]],[[["",0],["cielab",3]],["bool",0]],[[["",0],["cielch",3]],["bool",0]],[[["",0],["oklab",3]],["bool",0]],[[["",0],["oklch",3]],["bool",0]],[[["",0],["hsl",3]],["bool",0]],[[["",0],["hsv",3]],["bool",0]],[[["",0],["ycbcr",3]],["bool",0]],[[["",0],["yprimecbcr",3]],["bool",0]],[[["",0],["ypbpr",3]],["bool",0]],[[["",0],["yprimepbpr",3]],["bool",0]],[[["",0],["yuv",3]],["bool",0]],[[["",0],["ycxcz",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[],["alpha",3,[["genericcolor1",3]]]],[[],["alpha",3,[["luma",3]]]],[[],["alpha",3,[["acescg",3]]]],[[],["alpha",3,[["bt2020",3]]]],[[],["alpha",3,[["encodedbt2100pq",3]]]],[[],["alpha",3,[["encodedrec709",3]]]],[[],["alpha",3,[["ypbpr",3]]]],[[],["alpha",3,[["ciexyz",3]]]],[[],["alpha",3,[["yprimepbpr",3]]]],[[],["alpha",3,[["ictcphlg",3]]]],[[],["alpha",3,[["encodedbt2020",3]]]],[[],["alpha",3,[["ycbcr",3]]]],[[],["alpha",3,[["dcixyzprime",3]]]],[[],["alpha",3,[["cielab",3]]]],[[],["alpha",3,[["oklch",3]]]],[[],["alpha",3,[["aces2065",3]]]],[[],["alpha",3,[["hsv",3]]]],[[],["alpha",3,[["bt2100",3]]]],[[],["alpha",3,[["dcip3",3]]]],[[],["alpha",3,[["yuv",3]]]],[[],["alpha",3,[["cielch",3]]]],[[],["alpha",3,[["encodedsrgb",3]]]],[[],["alpha",3,[["encodeddisplayp3",3]]]],[[],["alpha",3,[["hsl",3]]]],[[],["alpha",3,[["linearsrgb",3]]]],[[],["alpha",3,[["genericcolor3",3]]]],[[],["alpha",3,[["rec709",3]]]],[[],["alpha",3,[["acescc",3]]]],[[],["alpha",3,[["oklab",3]]]],[[],["alpha",3,[["ictcppq",3]]]],[[],["alpha",3,[["ycxcz",3]]]],[[]],[[],["alpha",3,[["luminance",3]]]],[[],["alpha",3,[["acescct",3]]]],[[],["alpha",3,[["encodedbt2100hlg",3]]]],[[],["alpha",3,[["displayp3",3]]]],[[],["alpha",3,[["yprimecbcr",3]]]],[[],["premultipliedalpha",3,[["encodedbt2100hlg",3]]]],[[],["premultipliedalpha",3,[["yprimecbcr",3]]]],[[],["premultipliedalpha",3,[["encodeddisplayp3",3]]]],[[],["premultipliedalpha",3,[["encodedrec709",3]]]],[[],["premultipliedalpha",3,[["displayp3",3]]]],[[],["premultipliedalpha",3,[["hsv",3]]]],[[],["premultipliedalpha",3,[["oklch",3]]]],[[],["premultipliedalpha",3,[["ycxcz",3]]]],[[],["premultipliedalpha",3,[["hsl",3]]]],[[],["premultipliedalpha",3,[["ycbcr",3]]]],[[],["premultipliedalpha",3,[["acescct",3]]]],[[]],[[],["premultipliedalpha",3,[["dcip3",3]]]],[[],["premultipliedalpha",3,[["rec709",3]]]],[[],["premultipliedalpha",3,[["acescc",3]]]],[[],["premultipliedalpha",3,[["oklab",3]]]],[[],["premultipliedalpha",3,[["dcixyzprime",3]]]],[[],["premultipliedalpha",3,[["aces2065",3]]]],[[],["premultipliedalpha",3,[["ypbpr",3]]]],[[],["premultipliedalpha",3,[["cielch",3]]]],[[],["premultipliedalpha",3,[["bt2020",3]]]],[[],["premultipliedalpha",3,[["acescg",3]]]],[[],["premultipliedalpha",3,[["yprimepbpr",3]]]],[[],["premultipliedalpha",3,[["genericcolor3",3]]]],[[],["premultipliedalpha",3,[["encodedbt2100pq",3]]]],[[],["premultipliedalpha",3,[["cielab",3]]]],[[],["premultipliedalpha",3,[["encodedbt2020",3]]]],[[],["premultipliedalpha",3,[["luma",3]]]],[[],["premultipliedalpha",3,[["ciexyz",3]]]],[[],["premultipliedalpha",3,[["encodedsrgb",3]]]],[[],["premultipliedalpha",3,[["yuv",3]]]],[[],["premultipliedalpha",3,[["ictcphlg",3]]]],[[],["premultipliedalpha",3,[["ictcppq",3]]]],[[],["premultipliedalpha",3,[["luminance",3]]]],[[],["premultipliedalpha",3,[["bt2100",3]]]],[[],["premultipliedalpha",3,[["linearsrgb",3]]]],[[],["premultipliedalpha",3,[["genericcolor1",3]]]],[[]],[[["premultipliedalpha",3,[["encodedsrgb",3]]]],["encodedsrgb",3]],[[],["encodedsrgb",3]],[[]],[[["alpha",3,[["encodedsrgb",3]]]],["encodedsrgb",3]],[[["alpha",3,[["linearsrgb",3]]]],["linearsrgb",3]],[[]],[[["premultipliedalpha",3,[["linearsrgb",3]]]],["linearsrgb",3]],[[],["linearsrgb",3]],[[],["encodedrec709",3]],[[]],[[["premultipliedalpha",3,[["encodedrec709",3]]]],["encodedrec709",3]],[[["alpha",3,[["encodedrec709",3]]]],["encodedrec709",3]],[[["alpha",3,[["rec709",3]]]],["rec709",3]],[[["premultipliedalpha",3,[["rec709",3]]]],["rec709",3]],[[]],[[],["rec709",3]],[[["alpha",3,[["genericcolor3",3]]]],["genericcolor3",3]],[[["premultipliedalpha",3,[["genericcolor3",3]]]],["genericcolor3",3]],[[],["genericcolor3",3]],[[]],[[["premultipliedalpha",3,[["genericcolor1",3]]]],["genericcolor1",3]],[[["alpha",3,[["genericcolor1",3]]]],["genericcolor1",3]],[[],["genericcolor1",3]],[[]],[[]],[[["premultipliedalpha",3,[["luminance",3]]]],["luminance",3]],[[["alpha",3,[["luminance",3]]]],["luminance",3]],[[],["luminance",3]],[[["premultipliedalpha",3,[["luma",3]]]],["luma",3]],[[]],[[],["luma",3]],[[["alpha",3,[["luma",3]]]],["luma",3]],[[["alpha",3,[["acescg",3]]]],["acescg",3]],[[["premultipliedalpha",3,[["acescg",3]]]],["acescg",3]],[[],["acescg",3]],[[]],[[["alpha",3,[["aces2065",3]]]],["aces2065",3]],[[]],[[["premultipliedalpha",3,[["aces2065",3]]]],["aces2065",3]],[[],["aces2065",3]],[[["alpha",3,[["acescc",3]]]],["acescc",3]],[[]],[[["premultipliedalpha",3,[["acescc",3]]]],["acescc",3]],[[],["acescc",3]],[[],["acescct",3]],[[["premultipliedalpha",3,[["acescct",3]]]],["acescct",3]],[[["alpha",3,[["acescct",3]]]],["acescct",3]],[[]],[[["alpha",3,[["displayp3",3]]]],["displayp3",3]],[[]],[[],["displayp3",3]],[[["premultipliedalpha",3,[["displayp3",3]]]],["displayp3",3]],[[["alpha",3,[["encodeddisplayp3",3]]]],["encodeddisplayp3",3]],[[["premultipliedalpha",3,[["encodeddisplayp3",3]]]],["encodeddisplayp3",3]],[[]],[[],["encodeddisplayp3",3]],[[],["dcip3",3]],[[["premultipliedalpha",3,[["dcip3",3]]]],["dcip3",3]],[[["alpha",3,[["dcip3",3]]]],["dcip3",3]],[[]],[[]],[[["alpha",3,[["dcixyzprime",3]]]],["dcixyzprime",3]],[[],["dcixyzprime",3]],[[["premultipliedalpha",3,[["dcixyzprime",3]]]],["dcixyzprime",3]],[[],["bt2020",3]],[[]],[[["premultipliedalpha",3,[["bt2020",3]]]],["bt2020",3]],[[["alpha",3,[["bt2020",3]]]],["bt2020",3]],[[["premultipliedalpha",3,[["encodedbt2020",3]]]],["encodedbt2020",3]],[[],["encodedbt2020",3]],[[["alpha",3,[["encodedbt2020",3]]]],["encodedbt2020",3]],[[]],[[]],[[],["bt2100",3]],[[["alpha",3,[["bt2100",3]]]],["bt2100",3]],[[["premultipliedalpha",3,[["bt2100",3]]]],["bt2100",3]],[[]],[[["premultipliedalpha",3,[["encodedbt2100pq",3]]]],["encodedbt2100pq",3]],[[],["encodedbt2100pq",3]],[[["alpha",3,[["encodedbt2100pq",3]]]],["encodedbt2100pq",3]],[[],["encodedbt2100hlg",3]],[[["alpha",3,[["encodedbt2100hlg",3]]]],["encodedbt2100hlg",3]],[[["premultipliedalpha",3,[["encodedbt2100hlg",3]]]],["encodedbt2100hlg",3]],[[]],[[]],[[],["ictcppq",3]],[[["alpha",3,[["ictcppq",3]]]],["ictcppq",3]],[[["premultipliedalpha",3,[["ictcppq",3]]]],["ictcppq",3]],[[],["ictcphlg",3]],[[["premultipliedalpha",3,[["ictcphlg",3]]]],["ictcphlg",3]],[[["alpha",3,[["ictcphlg",3]]]],["ictcphlg",3]],[[]],[[["premultipliedalpha",3,[["ciexyz",3]]]],["ciexyz",3]],[[]],[[],["ciexyz",3]],[[["alpha",3,[["ciexyz",3]]]],["ciexyz",3]],[[["premultipliedalpha",3,[["cielab",3]]]],["cielab",3]],[[["alpha",3,[["cielab",3]]]],["cielab",3]],[[],["cielab",3]],[[]],[[["premultipliedalpha",3,[["cielch",3]]]],["cielch",3]],[[]],[[["alpha",3,[["cielch",3]]]],["cielch",3]],[[],["cielch",3]],[[["premultipliedalpha",3,[["oklab",3]]]],["oklab",3]],[[]],[[],["oklab",3]],[[["alpha",3,[["oklab",3]]]],["oklab",3]],[[["premultipliedalpha",3,[["oklch",3]]]],["oklch",3]],[[],["oklch",3]],[[["alpha",3,[["oklch",3]]]],["oklch",3]],[[]],[[]],[[["alpha",3,[["hsl",3]]]],["hsl",3]],[[["premultipliedalpha",3,[["hsl",3]]]],["hsl",3]],[[],["hsl",3]],[[["alpha",3,[["hsv",3]]]],["hsv",3]],[[["premultipliedalpha",3,[["hsv",3]]]],["hsv",3]],[[],["hsv",3]],[[]],[[]],[[],["ycbcr",3]],[[["alpha",3,[["ycbcr",3]]]],["ycbcr",3]],[[["premultipliedalpha",3,[["ycbcr",3]]]],["ycbcr",3]],[[],["yprimecbcr",3]],[[["premultipliedalpha",3,[["yprimecbcr",3]]]],["yprimecbcr",3]],[[]],[[["alpha",3,[["yprimecbcr",3]]]],["yprimecbcr",3]],[[["alpha",3,[["ypbpr",3]]]],["ypbpr",3]],[[],["ypbpr",3]],[[]],[[["premultipliedalpha",3,[["ypbpr",3]]]],["ypbpr",3]],[[],["yprimepbpr",3]],[[["premultipliedalpha",3,[["yprimepbpr",3]]]],["yprimepbpr",3]],[[]],[[["alpha",3,[["yprimepbpr",3]]]],["yprimepbpr",3]],[[["alpha",3,[["yuv",3]]]],["yuv",3]],[[]],[[],["yuv",3]],[[["premultipliedalpha",3,[["yuv",3]]]],["yuv",3]],[[["alpha",3,[["ycxcz",3]]]],["ycxcz",3]],[[]],[[],["ycxcz",3]],[[["premultipliedalpha",3,[["ycxcz",3]]]],["ycxcz",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,nullbool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,null,null,null,null,null,[[["",0],["alpha",3]],["bool",0]],[[["",0],["premultipliedalpha",3]],["bool",0]],[[["",0],["encodedsrgb",3]],["bool",0]],[[["",0],["linearsrgb",3]],["bool",0]],[[["",0],["encodedrec709",3]],["bool",0]],[[["",0],["rec709",3]],["bool",0]],[[["",0],["genericcolor3",3]],["bool",0]],[[["",0],["genericcolor1",3]],["bool",0]],[[["",0],["luminance",3]],["bool",0]],[[["",0],["luma",3]],["bool",0]],[[["",0],["acescg",3]],["bool",0]],[[["",0],["aces2065",3]],["bool",0]],[[["",0],["acescc",3]],["bool",0]],[[["",0],["acescct",3]],["bool",0]],[[["",0],["displayp3",3]],["bool",0]],[[["",0],["encodeddisplayp3",3]],["bool",0]],[[["",0],["dcip3",3]],["bool",0]],[[["",0],["dcixyzprime",3]],["bool",0]],[[["",0],["bt2020",3]],["bool",0]],[[["",0],["encodedbt2020",3]],["bool",0]],[[["",0],["bt2100",3]],["bool",0]],[[["",0],["encodedbt2100pq",3]],["bool",0]],[[["",0],["encodedbt2100hlg",3]],["bool",0]],[[["",0],["ictcppq",3]],["bool",0]],[[["",0],["ictcphlg",3]],["bool",0]],[[["",0],["ciexyz",3]],["bool",0]],[[["",0],["cielab",3]],["bool",0]],[[["",0],["cielch",3]],["bool",0]],[[["",0],["oklab",3]],["bool",0]],[[["",0],["oklch",3]],["bool",0]],[[["",0],["hsl",3]],["bool",0]],[[["",0],["hsv",3]],["bool",0]],[[["",0],["ycbcr",3]],["bool",0]],[[["",0],["yprimecbcr",3]],["bool",0]],[[["",0],["ypbpr",3]],["bool",0]],[[["",0],["yprimepbpr",3]],["bool",0]],[[["",0],["yuv",3]],["bool",0]],[[["",0],["ycxcz",3]],["bool",0]],[[["",0]],["usize",0]],[[["",0],["encodedsrgb",3]],["option",4,[["ordering",4]]]],[[["",0],["linearsrgb",3]],["option",4,[["ordering",4]]]],[[["",0],["encodedrec709",3]],["option",4,[["ordering",4]]]],[[["",0],["rec709",3]],["option",4,[["ordering",4]]]],[[["",0],["genericcolor3",3]],["option",4,[["ordering",4]]]],[[["",0],["genericcolor1",3]],["option",4,[["ordering",4]]]],[[["",0],["luminance",3]],["option",4,[["ordering",4]]]],[[["",0],["luma",3]],["option",4,[["ordering",4]]]],[[["",0],["acescg",3]],["option",4,[["ordering",4]]]],[[["",0],["aces2065",3]],["option",4,[["ordering",4]]]],[[["",0],["acescc",3]],["option",4,[["ordering",4]]]],[[["",0],["acescct",3]],["option",4,[["ordering",4]]]],[[["",0],["displayp3",3]],["option",4,[["ordering",4]]]],[[["",0],["encodeddisplayp3",3]],["option",4,[["ordering",4]]]],[[["",0],["dcip3",3]],["option",4,[["ordering",4]]]],[[["",0],["dcixyzprime",3]],["option",4,[["ordering",4]]]],[[["",0],["bt2020",3]],["option",4,[["ordering",4]]]],[[["",0],["encodedbt2020",3]],["option",4,[["ordering",4]]]],[[["",0],["bt2100",3]],["option",4,[["ordering",4]]]],[[["",0],["encodedbt2100pq",3]],["option",4,[["ordering",4]]]],[[["",0],["encodedbt2100hlg",3]],["option",4,[["ordering",4]]]],[[["",0],["ictcppq",3]],["option",4,[["ordering",4]]]],[[["",0],["ictcphlg",3]],["option",4,[["ordering",4]]]],[[["",0],["ciexyz",3]],["option",4,[["ordering",4]]]],[[["",0],["cielab",3]],["option",4,[["ordering",4]]]],[[["",0],["cielch",3]],["option",4,[["ordering",4]]]],[[["",0],["oklab",3]],["option",4,[["ordering",4]]]],[[["",0],["oklch",3]],["option",4,[["ordering",4]]]],[[["",0],["hsl",3]],["option",4,[["ordering",4]]]],[[["",0],["hsv",3]],["option",4,[["ordering",4]]]],[[["",0],["ycbcr",3]],["option",4,[["ordering",4]]]],[[["",0],["yprimecbcr",3]],["option",4,[["ordering",4]]]],[[["",0],["ypbpr",3]],["option",4,[["ordering",4]]]],[[["",0],["yprimepbpr",3]],["option",4,[["ordering",4]]]],[[["",0],["yuv",3]],["option",4,[["ordering",4]]]],[[["",0],["ycxcz",3]],["option",4,[["ordering",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Spaces"],[8,"ColorInterop"],[8,"ColorType"],[3,"CieLab"],[3,"Oklab"],[3,"Alpha"],[3,"PremultipliedAlpha"],[3,"EncodedSrgb"],[3,"LinearSrgb"],[3,"EncodedRec709"],[3,"Rec709"],[3,"GenericColor3"],[3,"GenericColor1"],[3,"Luminance"],[3,"Luma"],[3,"AcesCg"],[3,"Aces2065"],[3,"AcesCc"],[3,"AcesCct"],[3,"DisplayP3"],[3,"EncodedDisplayP3"],[3,"DciP3"],[3,"DciXYZPrime"],[3,"Bt2020"],[3,"EncodedBt2020"],[3,"Bt2100"],[3,"EncodedBt2100PQ"],[3,"EncodedBt2100HLG"],[3,"ICtCpPQ"],[3,"ICtCpHLG"],[3,"CieXYZ"],[3,"CieLCh"],[3,"Oklch"],[3,"Hsl"],[3,"Hsv"],[3,"YCbCr"],[3,"YPrimeCbCr"],[3,"YPbPr"],[3,"YPrimePbPr"],[3,"Yuv"],[3,"YCxCz"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};